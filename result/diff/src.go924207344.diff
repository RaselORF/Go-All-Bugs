--- /workspace/source/ft/os/24-pass-taint-via-field-of-global/src.go
+++ /workspace/source/ft/os/24-pass-taint-via-field-of-global/src.go
@@ -17,6 +17,33 @@
 var box Box
 
 func Run() {
+	// OpenRefactory Warning:
+	// Possible OS Command Injection!
+	// Path:
+	//	File: src.go, Line: 29
+	//		return req.URL.Query()
+	//		A tainted value is returned from the function call.
+	//	File: src.go, Line: 33
+	//		vals := getUrlValues(req)
+	//		Variable 'vals' is assigned a tainted value.
+	//	File: src.go, Line: 34
+	//		return vals.Get("cmd")
+	//		A tainted value is returned from the function call.
+	//	File: src.go, Line: 24
+	//		cmdName := getCmdName(req)
+	//		Variable 'cmdName' is assigned a tainted value.
+	//	File: src.go, Line: 25
+	//		RunCmd(cmdName)
+	//		Tainted information is passed through the function call via 'cmdName' to the parameter 'name'
+	//	File: src.go, Line: 38
+	//		box.cmd = exec.Command(name)
+	//		Variable 'box.cmd' is assigned a tainted value which is passed through a function call.
+	//	File: src.go, Line: 39
+	//		Run()
+	//		Tainted information is passed through the function call to the global 'box' through the field 'cmd' (from type Box)
+	//	File: src.go, Line: 20
+	//		box.cmd.Run()
+	//		Tainted information is used in a sink.
 	box.cmd.Run()
 }
 
