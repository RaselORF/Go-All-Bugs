--- /workspace/source/ft/os/56-array-taint-range-exp/src.go
+++ /workspace/source/ft/os/56-array-taint-range-exp/src.go
@@ -25,6 +25,33 @@
 func foo(b [5]Box) {
 	for _, entry := range b {
 		cmd := exec.Command(entry.data)
+		// OpenRefactory Warning:
+		// Possible OS Command Injection!
+		// Path:
+		//	File: src.go, Line: 17
+		//		vals := req.URL.Query()
+		//		Variable 'vals' is assigned a tainted value which is passed through a function call.
+		//	File: src.go, Line: 18
+		//		cmdName := vals.Get("cmd")
+		//		Variable 'cmdName' is assigned a tainted value which is passed through a function call.
+		//	File: src.go, Line: 19
+		//		bx := Box{cmdName}
+		//		Variable 'bx' is assigned a tainted value from the initialization of Field 'data' (from type Box).
+		//	File: src.go, Line: 21
+		//		ba[0] = bx
+		//		Variable 'ba[0]' is assigned a tainted value.
+		//	File: src.go, Line: 22
+		//		foo(ba)
+		//		Tainted information is passed through the function call via 'ba' to the parameter 'b' through the field 'data' (from type Box)
+		//	File: src.go, Line: 26
+		//		for _, entry := range b {
+		//		Variable 'entry' is assigned a tainted value.
+		//	File: src.go, Line: 27
+		//		cmd := exec.Command(entry.data)
+		//		Variable 'cmd' is assigned a tainted value which is passed through a function call.
+		//	File: src.go, Line: 28
+		//		cmd.Run()
+		//		Tainted information is used in a sink.
 		cmd.Run()
 	}
 }
