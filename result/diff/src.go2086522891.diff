--- /workspace/source/ft/os/101-pass-taint-through-vararg-to-caller/src.go
+++ /workspace/source/ft/os/101-pass-taint-through-vararg-to-caller/src.go
@@ -28,6 +28,27 @@
 func bar(b *Box) {
 	for _, cmdStr := range b.cmds {
 		cmd := exec.Command(cmdStr)
+		// OpenRefactory Warning:
+		// Possible OS Command Injection!
+		// Path:
+		//	File: src.go, Line: 17
+		//		vals := req.URL.Query()
+		//		Variable 'vals' is assigned a tainted value which is passed through a function call.
+		//	File: src.go, Line: 18
+		//		commands := []string{vals.Get("cmd")}
+		//		Variable 'commands' is assigned a tainted value which is passed through a function call.
+		//	File: src.go, Line: 21
+		//		bar(box)
+		//		Tainted information is passed through the function call via 'box' to the parameter 'b' through the field 'cmds' (from type Box)
+		//	File: src.go, Line: 29
+		//		for _, cmdStr := range b.cmds {
+		//		Variable 'cmdStr' is assigned a tainted value.
+		//	File: src.go, Line: 30
+		//		cmd := exec.Command(cmdStr)
+		//		Variable 'cmd' is assigned a tainted value which is passed through a function call.
+		//	File: src.go, Line: 31
+		//		cmd.Run()
+		//		Tainted information is used in a sink.
 		cmd.Run()
 	}
 }
