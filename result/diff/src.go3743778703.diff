--- /workspace/source/ft/os/102-pass-taint-through-vararg-to-caller/src.go
+++ /workspace/source/ft/os/102-pass-taint-through-vararg-to-caller/src.go
@@ -23,6 +23,27 @@
 func bar(cmdList ...string) {
 	for _, cmdStr := range cmdList {
 		cmd := exec.Command(cmdStr)
+		// OpenRefactory Warning:
+		// Possible OS Command Injection!
+		// Path:
+		//	File: src.go, Line: 19
+		//		vals := req.URL.Query()
+		//		Variable 'vals' is assigned a tainted value which is passed through a function call.
+		//	File: src.go, Line: 20
+		//		commands[0] = vals.Get("cmd")
+		//		Variable 'commands[0]' is assigned a tainted value which is passed through a function call.
+		//	File: src.go, Line: 15
+		//		bar(commands...)
+		//		Tainted information is passed through the function call via 'commands' to the parameter 'cmdList'
+		//	File: src.go, Line: 24
+		//		for _, cmdStr := range cmdList {
+		//		Variable 'cmdStr' is assigned a tainted value.
+		//	File: src.go, Line: 25
+		//		cmd := exec.Command(cmdStr)
+		//		Variable 'cmd' is assigned a tainted value which is passed through a function call.
+		//	File: src.go, Line: 26
+		//		cmd.Run()
+		//		Tainted information is used in a sink.
 		cmd.Run()
 	}
 }
