--- /workspace/source/ft/os/34-taint-in-pointer/src.go
+++ /workspace/source/ft/os/34-taint-in-pointer/src.go
@@ -26,5 +26,29 @@
 
 func bar(cmdStr string) {
 	cmd := exec.Command(cmdStr)
+	// OpenRefactory Warning:
+	// Possible OS Command Injection!
+	// Path:
+	//	File: src.go, Line: 17
+	//		vals := req.URL.Query()
+	//		Variable 'vals' is assigned a tainted value which is passed through a function call.
+	//	File: src.go, Line: 18
+	//		cmdName := vals.Get("cmd")
+	//		Variable 'cmdName' is assigned a tainted value which is passed through a function call.
+	//	File: src.go, Line: 19
+	//		msg := &Msg{txt: cmdName, n: 0}
+	//		Variable 'msg' is assigned a tainted value from the initialization of Field 'txt' (from type Msg).
+	//	File: src.go, Line: 20
+	//		foo(msg)
+	//		Tainted information is passed through the function call via 'msg' to the parameter 'm' through the field 'txt' (from type Msg)
+	//	File: src.go, Line: 24
+	//		bar(m.txt)
+	//		Tainted information is passed through the function call via 'm.txt' to the parameter 'cmdStr'
+	//	File: src.go, Line: 28
+	//		cmd := exec.Command(cmdStr)
+	//		Variable 'cmd' is assigned a tainted value which is passed through a function call.
+	//	File: src.go, Line: 29
+	//		cmd.Run()
+	//		Tainted information is used in a sink.
 	cmd.Run()
 }
