--- /workspace/source/ft/os/85-pass-taint-to-caller-param-map-key/src.go
+++ /workspace/source/ft/os/85-pass-taint-to-caller-param-map-key/src.go
@@ -29,6 +29,30 @@
 func foo(pm map[Box]string) {
 	for bx := range pm {
 		cmd := exec.Command(bx.data)
+		// OpenRefactory Warning:
+		// Possible OS Command Injection!
+		// Path:
+		//	File: src.go, Line: 23
+		//		vals := req.URL.Query()
+		//		Variable 'vals' is assigned a tainted value which is passed through a function call.
+		//	File: src.go, Line: 24
+		//		cmdName := vals.Get("cmd")
+		//		Variable 'cmdName' is assigned a tainted value which is passed through a function call.
+		//	File: src.go, Line: 25
+		//		bx := Box{cmdName}
+		//		Variable 'bx' is assigned a tainted value from the initialization of Field 'data' (from type Box).
+		//	File: src.go, Line: 26
+		//		mp[bx]
+		//		Map key 'bx' is assigned a tainted value.
+		//	File: src.go, Line: 19
+		//		foo(bm)
+		//		Tainted information is passed through the function call via 'bm' to the parameter 'pm' through the field 'data' (from type Box)
+		//	File: src.go, Line: 31
+		//		cmd := exec.Command(bx.data)
+		//		Variable 'cmd' is assigned a tainted value which is passed through a function call.
+		//	File: src.go, Line: 32
+		//		cmd.Run()
+		//		Tainted information is used in a sink.
 		cmd.Run()
 	}
 }
