--- /workspace/source/ft/os/62-map-value-taint/src.go
+++ /workspace/source/ft/os/62-map-value-taint/src.go
@@ -23,5 +23,26 @@
 
 func foo() {
 	cmd := exec.Command(gb.data["name"])
+	// OpenRefactory Warning:
+	// Possible OS Command Injection!
+	// Path:
+	//	File: src.go, Line: 18
+	//		vals := req.URL.Query()
+	//		Variable 'vals' is assigned a tainted value which is passed through a function call.
+	//	File: src.go, Line: 19
+	//		cmdName := vals.Get("cmd")
+	//		Variable 'cmdName' is assigned a tainted value which is passed through a function call.
+	//	File: src.go, Line: 20
+	//		gb.data["name"] = cmdName
+	//		Variable 'gb.data["name"]' is assigned a tainted value.
+	//	File: src.go, Line: 21
+	//		foo()
+	//		Tainted information is passed through the function call to the global 'gb' through the 'value' of the map
+	//	File: src.go, Line: 25
+	//		cmd := exec.Command(gb.data["name"])
+	//		Variable 'cmd' is assigned a tainted value which is passed through a function call.
+	//	File: src.go, Line: 26
+	//		cmd.Run()
+	//		Tainted information is used in a sink.
 	cmd.Run()
 }
